name: Claude Renovate Review
description: "Review Renovate PRs using Claude Code"

inputs:
  github_token:
    description: "GitHub token with repo and pull request permissions"
    default: ${{ github.token }}
    required: false
  pull_request_number:
    description: "The number of the pull request to review"
    required: true
  anthropic_api_key:
    description: "Anthropic API key for Claude Code"
    required: false
  claude_code_oauth_token:
    description: "Claude Code OAuth token (alternative to anthropic_api_key)"
    required: false
  allowed_tools:
    description: "Comma-separated list of allowed tools for Claude Code"
    default: 'Bash(gh pr diff:*),WebFetch(domain:github.com),WebFetch(domain:raw.githubusercontent.com)'
    required: false

outputs:
  report:
    description: "The review report generated by Claude Code"
    value: ${{ steps.result.outputs.value }}

runs:
  using: composite
  steps:
    - name: Get Pull Request
      id: pr
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
        PR_NUMBER: ${{ inputs.pull_request_number }}
      shell: bash
      run: |
        gh pr view "$PR_NUMBER" --json title,body > pr.json

        EOF=$(uuidgen)
        {
          echo "title=$(jq -r .title pr.json)"
          echo "number=$PR_NUMBER"

          echo "body<<$EOF"
          jq -r .body pr.json
          echo "$EOF"
        } >> "$GITHUB_OUTPUT"

    - uses: anthropics/claude-code-action/base-action@15db2b3c79c0681556c056e9bc3f61fd3fc0347d # v0.0.54
      id: claude
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      with:
        anthropic_api_key: ${{ inputs.anthropic_api_key }}
        claude_code_oauth_token: ${{ inputs.claude_code_oauth_token }}
        allowed_tools: ${{ inputs.allowed_tools }}
        prompt: |
          ## Context

          <pull_request>
          <number>${{ steps.pr.outputs.number }}</number>
          <title>${{ steps.pr.outputs.title }}</title>
          <body>
          ${{ steps.pr.outputs.body }}
          </body>
          </pull_request>

          ## Your Role

          Conduct a detailed review of the Renovate Pull Request and evaluate the safety of merging.

          **Important**: Do not execute local tests or build commands. This review should be conducted based solely on static analysis of changes, release notes, and impact assessment.

          ### Execution Steps

          1. **Pull Request Analysis**
              - Review the Pull Request information provided as context
              - Retrieve the Pull Request diff using `gh pr diff ${{ steps.pr.outputs.number }}`
              - Identify target packages and version changes

          2. **Release Content Investigation**
              - Review release notes and CHANGELOG of the target package
              - Understand breaking changes, new features, and bug fixes
              - Check for security-related fixes

          3. **Codebase Impact Analysis**
              - Search for usage locations of the target package in the current codebase
              - Verify the need for modifications due to API changes
              - Investigate impact on other packages due to dependency changes
              - Check impact on configuration files and environment settings

          4. **Safety Assessment (3 Levels)**
              - **Safe**: Backward compatibility is maintained, immediately mergeable
              - **Needs Manual Migration**: Manual code fixes or configuration changes required
              - **Not Safe**: Major breaking changes or security risks present

          ### Report Format

          ```markdown
          ## Renovate PR Review Results

          ### ‚öñÔ∏è Safety Assessment:
          [‚úÖ Safe | ‚ö†Ô∏è Needs Manual Migration | ‚ùå Not Safe]

          ### üîç Release Content Analysis
          - [Major changes]
          - [Breaking changes]
          - [Security fixes]

          ### üéØ Impact Scope Investigation
          - [Usage location identification results]
          - [Impact on other dependencies]

          ### üí° Recommended Actions
          - [Required modification work]
          - [Specific response methods]

          ### üîó Reference Links
          - [Release notes]
          - [CHANGELOG]
          ```

    - name: Get Claude Code Result
      shell: bash
      id: result
      env:
        CLAUDE_CODE_EXECUTION_FILE: ${{ steps.claude.outputs.execution_file }}
      run: |
        EOF=$(uuidgen)
        {
          echo "value<<$EOF"
          jq < "$CLAUDE_CODE_EXECUTION_FILE"
          echo "$EOF"
        } >> "$GITHUB_OUTPUT"
